#!/bin/bash

set -x

#-------------------------------------------------------------------------------
# Developer : Fredrick Williams
#
# Class     : MDS692 Data Science Practicum
#
# Instructor: Dr. Nathan C George
#
# Script    : 03-twitter-get_sentiments
#
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#                              GLOBAL VARIABLES
#-------------------------------------------------------------------------------
#=======================================
# Environment
#=======================================
date_time=`date +%Y%m%d%H%M%S`
today=`date +%Y%m%d`
status=0

#=======================================
# Directories
#=======================================
top_dir="/home/fwilliams"
projects_dir="${top_dir}/Projects"
class_dir="${projects_dir}/MSDS692"
data_dir="${class_dir}/Practicum/data3"
log_dir="${class_dir}/Practicum/log"
reports_dir="${class_dir}/Practicum/reports"
scripts_dir="${class_dir}/Practicum/scripts.3"

reports_data_dir="${reports_dir}/data"
#cryptocurrencies_dir="${reports_dir}/data/coinmarketcap/cryptocurrencies"
#prices_dir="${reports_dir}/data/coinmarketcap/prices"
sentiments_dir="${reports_dir}/data/twitter/sentiments"

reports_db_dir="${reports_dir}/db"

reports_detail="${reports_dir}/detail"
reports_summary_dir="${reports_dir}/summary"
reports_visualizations_dir="${reports_dir}/visualizations"

#=======================================
# Files
#=======================================
#sentiments_csv_file="${sentiments_dir}/sentiments.csv.${today}"
#sentiments_log_file="${sentiments_dir}/sentiments.log.${today}"
sentiments_csv_file="${sentiments_dir}/sentiments.csv.${date_time}"
sentiments_log_file="${sentiments_dir}/sentiments.log.${date_time}"

reformat_script="${scripts_dir}/reformat_twitter_data.pl"

#-------------------------------------------------------------------------------
#                                 FUNCTIONS
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Function    : create_sentiments_csv_file
#
# Arguments   : sentiments_csv_file - Output file name.
#
# Return Value: Integer - Exit status
#
# Description : Create sentiments data csv file.
#
# Notes       : Input files created by using Twitter API with Python to 
#               stream tweets.
#
#-------------------------------------------------------------------------------
function create_sentiments_csv_file
{
  #=====================================
  # Local variables
  #=====================================
  local status=0

  local sentiment_csv_file=$1

  # Generate header.
  if [[ ! -f ${sentiments_csv_file} ]]; then
    echo "time_ms,tweet,sentiment" > ${sentiments_csv_file}
  fi

  # Execute external Perl script; remove '(u' and ')' from lines
  cat ${data_dir}/sentiment_analysis.* | \
  tr -d \(u\) | \
  cut -d',' -f1,2,3 | \
  ${reformat_script} \
  >> ${sentiments_csv_file}

  #=====================================
  # Return
  #=====================================
  status=$?
  echo ${status}
}

#-------------------------------------------------------------------------------
# Function    : main
#
# Arguments   : None
#
# Return Value: Integer - Exit status
#
# Description : Control function.
#
# Notes       :
#
#-------------------------------------------------------------------------------
function main
{
  #=====================================
  # Local variables
  #=====================================
  local status=0

  echo "Preparing Twitter sentiments data csv file."
  create_sentiments_csv_file "${sentiments_csv_file}"
  status=$?
  if [[ ${status} -ne 0 ]]; then
    echo "Detected error in create_sentiments_csv_file function."
    exit ${status}
  fi

  #=====================================
  # Return
  #=====================================
  echo ${status}
}

#-------------------------------------------------------------------------------
#                                    MAIN
#-------------------------------------------------------------------------------
#=======================================
# Run program
#=======================================
main

status=$?

#=======================================
#  Exit program with exit status.
#=======================================
exit ${status}



#-------------------------------------------------------------------------------
#                                EXAMPLE RUNS
#-------------------------------------------------------------------------------





#-------------------------------------------------------------------------------
#                                 REFERENCES
#-------------------------------------------------------------------------------

