#!/bin/bash

set -x

#-------------------------------------------------------------------------------
# Developer : Fredrick Williams
#
# Class     : MDS692 Data Science Practicum
#
# Instructor: Dr. Nathan C George
#
# Script    : 01-coinmarketcap-get_prices
#
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#                              GLOBAL VARIABLES
#-------------------------------------------------------------------------------
#=======================================
# Environment
#=======================================
date_time=`date +%Y%m%d%H%M%S`
today=`date +%Y%m%d`
status=0

#=======================================
# Directories
#=======================================
top_dir="/home/fwilliams"
projects_dir="${top_dir}/Projects"
class_dir="${projects_dir}/MSDS692"
data_dir="${class_dir}/Practicum/data3"
log_dir="${class_dir}/Practicum/log"
reports_dir="${class_dir}/Practicum/reports"

reports_data_dir="${reports_dir}/data"
#cryptocurrencies_dir="${reports_dir}/data/coinmarketcap/cryptocurrencies"
prices_dir="${reports_dir}/data/coinmarketcap/prices"
#sentiments_dir="${reports_dir}/data/twitter/sentiments"

reports_db_dir="${reports_dir}/db"

reports_detail="${reports_dir}/detail"
reports_summary_dir="${reports_dir}/summary"
reports_visualizations_dir="${reports_dir}/visualizations"

#=======================================
# Files
#=======================================
#prices_csv_file="${prices_dir}/prices.csv.${today}"
#prices_log_file="${prices_dir}/prices.log.${today}"
prices_csv_file="${prices_dir}/prices.csv.${date_time}"
prices_log_file="${prices_dir}/prices.log.${date_time}"

#-------------------------------------------------------------------------------
#                                 FUNCTIONS
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Function    : create_prices_csv_file
#
# Arguments   : prices_csv_file - Output file name.
#
# Return Value: Integer - Exit status
#
# Description : Create cryptocurrency prices data csv file.
#
# Notes       : Input files created by cron driven download process.
#
#-------------------------------------------------------------------------------
function create_prices_csv_file
{
  #=====================================
  # Local variables
  #=====================================
  local status=0

  local prices_csv_file=$1

  # Generate header.
  if [[ ! -f ${prices_csv_file} ]]; then
    echo "id,timestamp,name,symbol,price" > ${prices_csv_file}
  fi

  # Remove single and double quotes.
  cat ${data_dir}/coinmarketcap* | \
  egrep "^'[0-9]+'," | \
  tr -d \'\" \
  >> ${prices_csv_file}

  # Leave single and double quotes; in case comma appears unexepectedly.
  #cat ${data_dir}/coinmarketcap* | \
  #egrep "^'[0-9]+'," \
  #>> ${prices_csv_file}

  #=====================================
  # Return
  #=====================================
  status=$?
  echo ${status}
}

#-------------------------------------------------------------------------------
# Function    : main
#
# Arguments   : None
#
# Return Value: Integer - Exit status
#
# Description : Control function.
#
# Notes       :
#
#-------------------------------------------------------------------------------
function main
{
  #=====================================
  # Local variables
  #=====================================
  local status=0

  echo "Preparing CoinMarketCap prices data csv file."
  create_prices_csv_file "${prices_csv_file}"
  status=$?
  if [[ ${status} -ne 0 ]]; then
    echo "Detected error in create_prices_csv_file function."
    exit ${status}
  fi

  #=====================================
  # Return
  #=====================================
  echo ${status}
}


#-------------------------------------------------------------------------------
#                                    MAIN
#-------------------------------------------------------------------------------
#=======================================
# Run program
#=======================================
main

status=$?

#=======================================
#  Exit program with exit status.
#=======================================
exit ${status}



#-------------------------------------------------------------------------------
#                                EXAMPLE RUNS
#-------------------------------------------------------------------------------





#-------------------------------------------------------------------------------
#                                 REFERENCES
#-------------------------------------------------------------------------------

